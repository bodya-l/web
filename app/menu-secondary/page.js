// app/menu-secondary/page.js
'use client';

import { useEffect, useState } from 'react';
import { useSearchParams } from 'next/navigation';
import Image from 'next/image';
import Link from 'next/link';
import ProfileModal from '../components/ProfileModal';
import CartModal from '../components/CartModal'; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥–∞–ª–∫—É –∫–æ—à–∏–∫–∞
import { useCart } from '../../context/CartContext'; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ö—É–∫ –∫–æ—à–∏–∫–∞

export default function MenuSecondaryPage() {
    const [dishes, setDishes] = useState([]);
    const [isProfileOpen, setIsProfileOpen] = useState(false);
    const [isCartOpen, setIsCartOpen] = useState(false); // –°—Ç–∞–Ω –¥–ª—è –º–æ–¥–∞–ª–∫–∏ –∫–æ—à–∏–∫–∞

    const searchParams = useSearchParams();
    const category = searchParams.get('category');

    // –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ –¥–∞–Ω—ñ –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∫–æ—à–∏–∫–∞
    const { addToCart, cartCount } = useCart();


    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ –Ω–∞—à–æ–≥–æ API, –∫–æ–ª–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è

    const [activeCategory, setActiveCategory] = useState('–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏');

  // 2. –í–∏ –∫–∞–∂–µ—Ç–µ: "–ø—Ä–∏ –∫–ª—ñ–∫—É, –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ–π —Å—Ç–∞–Ω `true`

    const [activeCategory, setActiveCategory] = useState('–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏');

  // 2. –í–∏ –∫–∞–∂–µ—Ç–µ: "–ø—Ä–∏ –∫–ª—ñ–∫—É, –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ–π —Å—Ç–∞–Ω `true`

    useEffect(() => {
        if (category) {
            fetch(`/api/dishes?category=${category}`)
                .then((res) => res.json())
                .then((data) => {
                    setDishes(data);
                });
        }
    }, [category]); // –ï—Ñ–µ–∫—Ç —Å–ø—Ä–∞—Ü—é—î, —è–∫—â–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –∑–º—ñ–Ω–∏—Ç—å—Å—è

    return (
        <>
            {/* –ú–æ–¥–∞–ª–∫–∞ –ü—Ä–æ—Ñ—ñ–ª—é */}
            <ProfileModal
                isOpen={isProfileOpen}
                onClose={() => setIsProfileOpen(false)}
            />
            {/* –ú–æ–¥–∞–ª–∫–∞ –ö–æ—à–∏–∫–∞ */}
            <CartModal
                isOpen={isCartOpen}
                onClose={() => setIsCartOpen(false)}
            />

            {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏, —â–æ –∑–∞–ø–æ–≤–Ω—é—î –µ–∫—Ä–∞–Ω */}
            <main className="pageContainer menuPageContainer">

                {/* –û–±–≥–æ—Ä—Ç–∫–∞, —è–∫–∞ –∑–∞–ø–æ–≤–Ω—é—î –≤–∏—Å–æ—Ç—É —ñ –æ–±–º–µ–∂—É—î —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–Ω—Ç—É */}
                <div className="secondaryMenuContentWrapper">

                    {/* –•–µ–¥–µ—Ä –∑ –∫–Ω–æ–ø–∫–æ—é "–ù–∞–∑–∞–¥" —Ç–∞ —ñ–∫–æ–Ω–∫–∞–º–∏ */}
                    <header className="secondaryMenuHeaderNew">
                        <Link href="/menu" className="backButton">
                            ‚Äπ
                        </Link>
                        <div className="restaurantInfo">
                            <h3>NAZVA</h3>
                            <p>description of the restaurant</p>
                        </div>
                        <div className="headerIcons">
                            {/* –Ü–∫–æ–Ω–∫–∞ –∫–æ—à–∏–∫–∞ –≤—ñ–¥–∫—Ä–∏–≤–∞—î –º–æ–¥–∞–ª–∫—É */}
                            <span className="cartIcon" onClick={() => setIsCartOpen(true)}>
                üõí
                                {cartCount > 0 && <span className="cartCountBadge">{cartCount}</span>}
              </span>
                            <span className="profileIcon" onClick={() => setIsProfileOpen(true)}>
                üë§
              </span>
                        </div>
                    </header>

                    {/* –¢—ñ–ª–æ –º–µ–Ω—é (–±—ñ—á–Ω–∞ –ø–∞–Ω–µ–ª—å + —Å–ø–∏—Å–æ–∫) */}
                    <div className="secondaryMenuBody">

                        {/* –ë—ñ—á–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ –≤–∏–ø–∞–¥–∞—é—á–∏–º –º–µ–Ω—é */}
                        <nav className="secondarySideNav">
                            {/* --- –ö–£–•–ù–Ø --- */}
                            <div className="sideNavItem with-dropdown">
                                <span>–ö—É—Ö–Ω—è</span>
                                <ul className="dropdown-menu">
                                    <li><Link href="/menu-secondary?category=–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏" onClick={() => setActiveCategory("–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏")} className={activeCategory === "–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏</Link></li>
                                    <li><Link href="/menu-secondary?category=–°—É–ø–∏" onClick={() => setActiveCategory("–°—É–ø–∏")} className={activeCategory === "–°—É–ø–∏" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–°—É–ø–∏</Link></li>
                                    <li><Link href="/menu-secondary?category=–°–∞–ª–∞—Ç–∏" onClick={() => setActiveCategory("–°–∞–ª–∞—Ç–∏")} className={activeCategory === "–°–∞–ª–∞—Ç–∏" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–°–∞–ª–∞—Ç–∏</Link></li>
                                    <li><Link href="/menu-secondary?category=–î–µ—Å–µ—Ä—Ç–∏" onClick={() => setActiveCategory("–î–µ—Å–µ—Ä—Ç–∏")} className={activeCategory === "–î–µ—Å–µ—Ä—Ç–∏" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–î–µ—Å–µ—Ä—Ç–∏</Link></li>
                                </ul>
                            </div>
                            {/* --- –ù–ê–ü–û–á --- */}
                            <div className="sideNavItem with-dropdown">
                                <span>–ù–∞–ø–æ—ó</span>
                                <ul className="dropdown-menu">
                                    <li><Link href="/menu-secondary?category=–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó" onClick={() => setActiveCategory("–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó")} className={activeCategory === "–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó</Link></li>
                                    <li><Link href="/menu-secondary?category=–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó" onClick={() => setActiveCategory("–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó")} className={activeCategory === "–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó</Link></li>
                                    <li><Link href="/menu-secondary?category=–ö–∞–≤–∞" onClick={() => setActiveCategory("–ö–∞–≤–∞")} className={activeCategory === "–ö–∞–≤–∞" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–ö–∞–≤–∞</Link></li>
                                    <li><Link href="/menu-secondary?category=–ß–∞–π" onClick={() => setActiveCategory("–ß–∞–π")} className={activeCategory === "–ß–∞–π" ? 'active_sideNavItem-sub' : 'sideNavItem-sub'}>–ß–∞–π</Link></li>
                                </ul>
                            </div>
                            {/* --- –ü–Ü–¶–ê --- */}
                            <Link href="/menu-secondary?category=–ü—ñ—Ü–∞" className="sideNavItem">
                                –ü—ñ—Ü–∞
                            </Link>
                        </nav>

                        {/* –û–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–≤ */}
                        <div className="dishListNew">
                            <div className="dishListHeader">
                                <h3>{category || '–°—Ç—Ä–∞–≤–∏'}</h3>
                                <div className="dishProgress">
                                    <span>lvl. 23</span>
                                    <div className="dishProgressBar"><div className="dishProgressBarFill" style={{ width: '83%' }}></div></div>
                                    <span>83%</span>
                                </div>
                            </div>

                            {Array.isArray(dishes) && dishes.map((dish) => (
                                <div key={dish.id} className="dishItemNew">
                                    <div className="dishInfoNew">
                                        <h4>{dish.name}</h4>
                                        <p>{dish.description || '–û–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π'}</p>
                                        <div className="dishDetailsNew">
                                            <span className="dishPriceNew">{dish.price} –≥—Ä–Ω</span>
                                        </div>
                                        <div className="dishCaloriesNew">
                                            <span className="caloriesBar red"></span>
                                            <span className="caloriesBar green"></span>
                                        </div>
                                    </div>
                                    <div className="dishImageContainerNew">
                                        <Image
                                            src={dish.imageUrl || '/images/placeholder.jpg'}
                                            alt={dish.name}
                                            width={90}
                                            height={90}
                                            className="dishImageNew"
                                        />
                                        {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–¥–∞—î —Ç–æ–≤–∞—Ä –≤ –∫–æ—à–∏–∫ –ø—Ä–∏ –∫–ª—ñ–∫—É */}
                                        <button
                                            className="dishAddButtonNew"
                                            onClick={() => addToCart(dish)}
                                        >
                                            +
                                        </button>
                                    </div>
                                </div>
                            ))}
                        </div>

                    </div>
                </div>
            </main>
        </>
    );
}
// app/menu-secondary/page.js
'use client';

import { useEffect, useState } from 'react';
import { useSearchParams } from 'next/navigation';
import Image from 'next/image';
import Link from 'next/link';
import ProfileModal from '../components/ProfileModal';
import CartModal from '../components/CartModal';
import { useCart } from '../../context/CartContext';
import { useSession } from 'next-auth/react'; // –ü–æ—Ç—Ä—ñ–±–µ–Ω –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
import { ArrowLeft, ShoppingCart, User } from 'lucide-react'; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —ñ–∫–æ–Ω–∫–∏

export default function MenuSecondaryPage() {
    const [dishes, setDishes] = useState([]);
    const [isProfileOpen, setIsProfileOpen] = useState(false);
    const [isCartOpen, setIsCartOpen] = useState(false);

    const searchParams = useSearchParams();
    const category = searchParams.get('category');

    const { addToCart, cartCount } = useCart();
    const { data: session } = useSession(); // –û—Ç—Ä–∏–º—É—î–º–æ —Å–µ—Å—ñ—é –¥–ª—è —ñ–∫–æ–Ω–∫–∏ –ø—Ä–æ—Ñ—ñ–ª—é

    useEffect(() => {
        if (category) {
            fetch(`/api/dishes?category=${category}`)
                .then((res) => res.json())
                .then((data) => {
                    setDishes(data);
                });
        }
    }, [category]);

    return (
        <>
            <ProfileModal
                isOpen={isProfileOpen}
                onClose={() => setIsProfileOpen(false)}
            />
            <CartModal
                isOpen={isCartOpen}
                onClose={() => setIsCartOpen(false)}
            />

            <main className="pageContainer menuPageContainer">
                <div className="secondaryMenuContentWrapper">
                    <header className="secondaryMenuHeaderNew">
                        <Link href="/menu" className="backButton">
                            <ArrowLeft size={24} strokeWidth={2.5} /> {/* –ó–∞–º—ñ–Ω–∞ ‚Üê */}
                        </Link>
                        <div className="restaurantInfo">
                            <h3>NAZVA</h3>
                            <p>description of the restaurant</p>
                        </div>
                        <div className="headerIcons">
              <span className="cartIcon" onClick={() => setIsCartOpen(true)}>
                <ShoppingCart size={22} strokeWidth={2.5} /> {/* –ó–∞–º—ñ–Ω–∞ üõí */}
                  {cartCount > 0 && <span className="cartCountBadge">{cartCount}</span>}
              </span>
                            <span className="profileIcon" onClick={() => setIsProfileOpen(true)}>
                 {session?.user?.image ? (
                     <img src={session.user.image} alt="profile" className="headerProfileImage" />
                 ) : (
                     <User size={22} strokeWidth={2.5} /> // –ó–∞–º—ñ–Ω–∞ üë§
                 )}
              </span>
                        </div>
                    </header>

                    <div className="secondaryMenuBody">
                        <nav className="secondarySideNav">
                            {/* --- –ö–£–•–ù–Ø --- */}
                            <div className="sideNavItem with-dropdown">
                                <span>–ö—É—Ö–Ω—è</span>
                                <ul className="dropdown-menu">
                                    <li><Link href="/menu-secondary?category=–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏" className="sideNavItem-sub">–ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏</Link></li>
                                    <li><Link href="/menu-secondary?category=–°—É–ø–∏" className="sideNavItem-sub">–°—É–ø–∏</Link></li>
                                    <li><Link href="/menu-secondary?category=–°–∞–ª–∞—Ç–∏" className="sideNavItem-sub">–°–∞–ª–∞—Ç–∏</Link></li>
                                    <li><Link href="/menu-secondary?category=–î–µ—Å–µ—Ä—Ç–∏" className="sideNavItem-sub">–î–µ—Å–µ—Ä—Ç–∏</Link></li>
                                </ul>
                            </div>
                            {/* --- –ù–ê–ü–û–á --- */}
                            <div className="sideNavItem with-dropdown">
                                <span>–ù–∞–ø–æ—ó</span>
                                <ul className="dropdown-menu">
                                    <li><Link href="/menu-secondary?category=–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó" className="sideNavItem-sub">–ê–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó</Link></li>
                                    <li><Link href="/menu-secondary?category=–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó" className="sideNavItem-sub">–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó</Link></li>
                                    <li><Link href="/menu-secondary?category=–ö–∞–≤–∞" className="sideNavItem-sub">–ö–∞–≤–∞</Link></li>
                                    <li><Link href="/menu-secondary?category=–ß–∞–π" className="sideNavItem-sub">–ß–∞–π</Link></li>
                                </ul>
                            </div>
                            {/* --- –ü–Ü–¶–ê --- */}
                            <Link href="/menu-secondary?category=–ü—ñ—Ü–∞" className="sideNavItem">
                                –ü—ñ—Ü–∞
                            </Link>
                        </nav>

                        <div className="dishListNew">
                            <div className="dishListHeader">
                                <h3>{category || '–°—Ç—Ä–∞–≤–∏'}</h3>
                                <div className="dishProgress">
                                    {/* TODO: –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ level/progress */}
                                    <span>lvl. 23</span>
                                    <div className="dishProgressBar"><div className="dishProgressBarFill" style={{ width: '83%' }}></div></div>
                                    <span>83%</span>
                                </div>
                            </div>

                            {Array.isArray(dishes) && dishes.map((dish) => (
                                <div key={dish.id} className="dishItemNew">
                                    <div className="dishInfoNew">
                                        <h4>{dish.name}</h4>
                                        <p>{dish.description || '–û–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π'}</p>
                                        <div className="dishDetailsNew">
                                            <span className="dishPriceNew">{dish.price} –≥—Ä–Ω</span>
                                        </div>
                                        <div className="dishCaloriesNew">
                                            <span className="caloriesBar red"></span>
                                            <span className="caloriesBar green"></span>
                                        </div>
                                    </div>
                                    <div className="dishImageContainerNew">
                                        <Image
                                            src={dish.imageUrl || '/images/placeholder.jpg'}
                                            alt={dish.name}
                                            width={90}
                                            height={90}
                                            className="dishImageNew"
                                        />
                                        <button
                                            className="dishAddButtonNew"
                                            onClick={() => addToCart(dish)}
                                        >
                                            +
                                        </button>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            </main>
        </>
    );
}